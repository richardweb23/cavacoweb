{"version":3,"sources":["assets/fonts/OpenSans/OpenSans-Bold.woff","assets/fonts/OpenSans/OpenSans-Bold.woff2","components/shared/player.jsx","components/shared/braco-cavaco.jsx","components/pages/home.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Player","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","msisdn","userToken","isPlaying","player","loadPlayer","bind","assertThisInitialized","destroyPlayer","nextProps","console","log","somUrl","play","setState","src","window","addEventListener","e","pause","currentTime","removeEventListener","_this2","iconClass","handleClick","label","gaClass","react_default","a","createElement","ref","className","onClick","c","onEnded","Component","BracoCavaco","casas","cordas","nota","notasPrimeiraCorda","notasSegundaCorda","notasTerceiraCorda","printNota","printBullet","_casa","_corda","_tablatura","corda","casa","tablatura","notasDaCorda","getNota","process","numberCorda","parseInt","bullet","forEach","item","id","map","indexCasa","key","itemCorda","indexCorda","Math","abs","data-tablatura","data-corda","data-nota","Home","Fragment","braco_cavaco","Page","NoMatch","AppRouter","Switch","Route","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","BrowserRouter","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.674e750f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/OpenSans-Bold.f9fc9780.woff\";","module.exports = __webpack_public_path__ + \"static/media/OpenSans-Bold.7d3779b1.woff2\";","/*\r\n * Tone Button\r\n * Button for tone items\r\n * @props\r\n */\r\n\r\nimport React, { Component } from 'react';\r\n\r\nclass Player extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      msisdn: \"\",\r\n      userToken: \"\",\r\n      isPlaying: false,\r\n      player: \"\"\r\n    };\r\n\r\n    this.loadPlayer = this.loadPlayer.bind(this);\r\n    this.destroyPlayer = this.destroyPlayer.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps){\r\n    console.log(nextProps.somUrl)\r\n    this.loadPlayer(nextProps.somUrl);\r\n  }\r\n\r\n  loadPlayer(somUrl){\r\n    if(this.player && this.player.play){\r\n\r\n      this.setState({ isPlaying: true });\r\n\r\n      if(somUrl !== this.player.src){\r\n        this.player.src = somUrl;\r\n      }\r\n      this.player.play();\r\n\r\n      window.addEventListener('stopOtherPlayer', this.destroyPlayer);\r\n    }\r\n  }\r\n\r\n  destroyPlayer(e){\r\n    //const eventType = e.type;\r\n    if(this.player){\r\n      this.setState({\r\n        isPlaying: false\r\n      });\r\n      \r\n      this.player.pause();\r\n      this.player.currentTime = 0;\r\n    }\r\n\r\n    window.removeEventListener('stopOtherPlayer', this.destroyPlayer);\r\n  }\r\n\r\n  render() {\r\n    let iconClass = null;\r\n    let handleClick = null;\r\n    let label = null;\r\n    let gaClass = null;\r\n\r\n    if(this.state.isPlaying) {\r\n      iconClass = \"icon-stop\";\r\n      gaClass = \"ga-stop\";\r\n      label = 'stop';\r\n      handleClick = this.destroyPlayer;\r\n    } else {\r\n      iconClass = \"icon-play\";\r\n      gaClass = \"ga-play\";\r\n      label = 'play';\r\n      handleClick = this.loadPlayer;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div ref=\"updated\" className={\"btn-tone btn-tone-play \" + gaClass} onClick={handleClick}>\r\n          <i className={iconClass}></i>\r\n          {label}\r\n        </div>\r\n        <audio className=\"hidden\" ref={c => this.player = c} onEnded={this.destroyPlayer} />        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Player","import React, { Component } from \"react\";\r\n\r\nimport Player from './player';\r\n\r\nclass BracoCavaco extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      casas: [0,1,2,3,4,5,6,7,8,9,10,11,12],\r\n      cordas: [1,2,3,4],\r\n      nota: '',\r\n      somUrl: null,\r\n      notasPrimeiraCorda: [\"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\", \"C\", \"C#\", \"D\"],\r\n      notasSegundaCorda: [\"B\", \"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"],\r\n      notasTerceiraCorda: [\"G\", \"G#\", \"A\", \"A#\", \"B\", \"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\"]\r\n    }\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.printNota = this.printNota.bind(this);\r\n    this.printBullet = this.printBullet.bind(this);\r\n  }\r\n  \r\n  handleClick(e, _casa, _corda, _tablatura){\r\n    let corda = _corda;\r\n    let casa = _casa;\r\n    let tablatura = _tablatura;\r\n    let notasDaCorda = this.getNota(corda);\r\n\r\n    console.log('casa: ' + casa + ' corda: ' + corda);\r\n    console.log('Notas da corda: ' + notasDaCorda);\r\n\r\n    this.setState({nota: notasDaCorda[casa], somUrl: process.env.PUBLIC_URL+'/audios/'+tablatura+'.mp3'})\r\n  }\r\n\r\n  getNota(_corda){\r\n    var corda = \"corda_\" + _corda;\r\n\r\n    switch(corda){\r\n      case \"corda_2\":\r\n        return this.state.notasSegundaCorda\r\n      case \"corda_3\":\r\n        return this.state.notasTerceiraCorda\r\n      default:\r\n        return this.state.notasPrimeiraCorda\r\n    }\r\n  }\r\n\r\n  printNota(_corda, _casa){\r\n    let notasDaCorda = this.getNota(_corda);\r\n    return notasDaCorda[_casa]\r\n  }\r\n\r\n  printBullet(numberCorda){\r\n    let acorde = [];//[44,32,23,14]; //[42, 21, 12];\r\n    let corda = parseInt(numberCorda);\r\n    let bullet = false;\r\n\r\n    acorde.forEach((item)=>{\r\n      if(item === corda){\r\n        bullet = true\r\n      }\r\n    })\r\n\r\n    return bullet\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <section className=\"cavaco\">\r\n        <div id=\"nota\">NOTA {this.state.nota}</div>\r\n        {/*<img src={process.env.PUBLIC_URL + '/teste.png'} />*/}\r\n        <Player somUrl={this.state.somUrl}/>\r\n        <div className=\"braco\">\r\n          {this.state.casas.map((item, indexCasa)=>{\r\n            let casa = indexCasa;\r\n            return (\r\n              <div className={casa===0 ? \"casa inicial\" : \"casa\"} key={casa}>\r\n                {this.state.cordas.map((itemCorda, indexCorda)=>{\r\n                  let corda = Math.abs(indexCorda-4);\r\n                  let tablatura = corda +''+ casa;\r\n\r\n                  return (\r\n                  <div className=\"corda\" key={indexCorda}\r\n                    data-tablatura={tablatura}\r\n                    data-corda={corda}\r\n                    data-nota={this.printNota(corda, casa)}\r\n                    onClick={(e)=>{this.handleClick(e, casa, corda, tablatura)}}>\r\n\r\n                      {this.printBullet(tablatura) &&\r\n                        <div className=\"bullet\"></div>\r\n                      }\r\n                      \r\n                  </div>)\r\n                })}\r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BracoCavaco;","import React, { Component } from 'react';\r\n\r\nimport BracoCavaco from '../shared/braco-cavaco.jsx';\r\n\r\nclass Home extends Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <React.Fragment>\r\n        <BracoCavaco />\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport {  Route, Switch } from \"react-router-dom\";\r\n\r\n//import logo from './logo.svg';\r\n//import './App.css';\r\n//import './assets/less/style.less';\r\n\r\nimport Home from \"./components/pages/home.jsx\";\r\n\r\nconst Page = () => <h2>Página interna</h2>\r\nconst NoMatch = () => <h2>page not fount</h2>\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Home} />\r\n      <Route path=\"/page\" component={Page} />\r\n      <Route component={NoMatch} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport './style.css';\r\nimport './assets/fonts/OpenSans/OpenSans-Bold.woff';\r\nimport './assets/fonts/OpenSans/OpenSans-Bold.woff2';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('main')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}